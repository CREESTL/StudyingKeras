# -*- coding: utf-8 -*-
"""tensorboard

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o8U2_Xy9CHsq5Uh4OsqhFBkVzc_6xdml

В данном ноутбуке представлены примеры работы с TensorBoard - инструментом для визуализации информации в процессе обучения модели

TensorBoard может делать следующее:


*   Визуалиация архитектуры модели
*   Визуализация метрик
*   Визуализация гистограмм активаций слоев
*   Изучение векторных представлений в 3D

Обучим простую модель для определения окраски отзывов IMDB
"""

!nvidia-smi

import keras
from keras import layers
from keras.datasets import imdb
from keras.preprocessing import sequence
from keras.models import Sequential

# создание папки логов
!mkdir '/content/log_dir'

# количество самых часто используемых слов 
max_words = 2000
# максимальная длина отзыва
max_text_length = 500

(x_train, y_train), (x_test, y_test) = imdb.load_data(num_words=max_words)
x_train = sequence.pad_sequences(x_train, maxlen=max_text_length)
x_test = sequence.pad_sequences(x_test, maxlen=max_text_length)

model = Sequential()
model.add(layers.Embedding(max_words, 128, input_length=max_text_length, name='embeded'))
# окно для свертки - 7 элементов массива
model.add(layers.Conv1D(32, 7, activation='relu'))
model.add(layers.MaxPooling1D(5))
model.add(layers.Conv1D(32, 7, activation='relu'))
model.add(layers.GlobalMaxPooling1D())
model.add(layers.Dense(1))
model.summary()

model.compile(optimizer='rmsprop', loss='binary_crossentropy', metrics=['accuracy'])

callbacks = [
             keras.callbacks.TensorBoard(
                 # файлы журналов будут сохраняться в эту папку
                 log_dir='/content/log_dir',
                 # гистограммы активаций слоев будут строяться каждую эпоху
                 histogram_freq=1,
                 # запись векторных представлений будет делаться каждую эпоху
                 embeddings_freq=1.
             )
]

history = model.fit(
    x_train,
    y_train,
    epochs=20,
    batch_size=64,
    validation_split=0.2,
    callbacks=callbacks
)

!tensorboard --logdir='/content/log_dir'

"""Активация TensorBoard"""

# Commented out IPython magic to ensure Python compatibility.
# чтобы результаты отображались прямо в колабе надо делать через %
# %load_ext tensorboard
# читает данные из папки и выводит их в браузере
# http://localhost:6006/
# %tensorboard --logdir='/content/log_dir' --host localhost

"""В окне TensorBoard видно даже слишком много информации. Довольно плохо отображена архитектура. 

Есть еще один инструмент для визуализации архитектуры:
"""

!pip install -U pydot-ng, graphviz

import cv2
from google.colab.patches import cv2_imshow
from keras.utils import plot_model

# изображение рендериться в файл, так что вывести его можно через OpenCV
# show_shapes указывает, надо ли рядом с слоями писать их размер
plot_model(model, to_file='model.png', show_shapes=True)  

cv2_imshow(cv2.imread('model.png'))