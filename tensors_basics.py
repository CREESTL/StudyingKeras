'''
Здесь я изучаю тензоры
'''
import numpy as np
'''
Тензор - это просто контейнер для чисел.
'''

'''
Скаляры - тензоры нулевого ранга
В numpy float32, float64 - скалярный тензор (скалярный массив)
'''
x = np.array(12)
print(f"number of axes of {x} is {x.ndim}")

'''
Векторы - тензоры первого ранга
Данный вектор содержит 5 элементов и называется пятимерным вектором. НЕ ПУТАТЬ пятимерный вектор с 
пятимерным тензором! У вектора - одна ось и 5 значений, а у тензора - 5 осей и сколько угодно значений
'''
y = np.array([12, 3, 6, 14])
print(f"number of axes of {y} is {y.ndim}")

'''
Матрицы - тензоры второго ранга
Массив векторов - матрица. Иммет две оси
'''
z = np.array([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]])
print(f"number of axes of {z} is {z.ndim}")

'''
Тензоры третьего и высшего рангов
Если тензор второго ранга(матрицу) упаковать в еще одну матрицу, то будет ЧИСЛОВОЙ КУБ
Если упаковать тензор третьего ранга в матрицу, то будет четвертый ранг и т.д.
'''
f = np.array([[[1, 2, 3, 4, 5], [1,2,3,4,5], [1,2,3,4,5]]])
print(f"number of axes of {f} is {f.ndim}")

'''
Тензор определяется ТРЕМЯ ключевыми атрибутами
1) Ранг (количество осей)
2) Форма - это кортеж целых чисел, которые описывают количество измерений на КАЖДОЙ ОСИ
 Для матрицы это (кол-во строк, кол-во столбцов), потому что у нее ДВА ИЗМЕРЕНИЯ. Для вектора -
- (кол-во столбцов, ). Для скаляра - (). Для куба форма будет например (3, 3, 5). Каждое число соответствует
измерению
3) Тип данных (float32, float64, uint8...)
'''

from keras.datasets import mnist
(train_images, train_labels), (test_images, test_labels) = mnist.load_data()
# количество осей тензора train_images
print(f"train_images has {train_images.ndim} axes")
# его форму
print(f"train_images has shape {train_images.shape}")
# тип данных в нем
print(f"train_images has data type of {train_images.dtype}")

import matplotlib.pyplot as plt
# попробуем изобразить данные их train_images
digit = train_images[4]
plt.imshow(digit, cmap=plt.cm.binary)
plt.show()
input()
'''
Получение через индекс какого-то элемента в тензоре называется срез тензора
В этом примере извлекаются цифры с 10-ой до 100-ой и помещаются в массив с формой (90, 28, 28)
'''
slice = train_images[10:100]
print(f"slice has shape of {slice.shape}")

# срезы можно делать через " : ".
# это эквивалентно всем элементам оси
slice = train_images[10:100, :, :]
print(f"new slice has shape of {slice.shape}")
digit = slice[4]
plt.imshow(digit, cmap=plt.cm.binary)
plt.show()
input()
# а теперь возьмем только квадрат из 14 пикселей в каждой картинке
slice = train_images[:, 14:, 14:]
print(f"half-a-slice has shape of {slice.shape}")
digit = slice[4]
plt.imshow(digit, cmap=plt.cm.binary)
plt.show()

'''
Обычно первая ось (с индексом 0) называется ОСЬЮ ОБРАЗЦОВ

Если используем пакеты (batch), то она называется ОСЬЮ ПАКЕТОВ
'''

'''
Векторнаые данные - 2мерные тензоры: образцы признаки

Временные ряды - 3мерные тензоры: образцы, метки времени, признаки

Изображения - 4мерные тензоры: образцы, высота, ширина, цвет

Видео - 5мерные тензоры: образцы кадры, высота, ширина, цвет
'''
